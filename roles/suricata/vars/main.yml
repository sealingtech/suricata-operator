# EDCOP Suricata Chart values
suricata:
  fullname: suricata-fullname
  name: suricata-name
  namespace: default
images:
  #Repositories to pull images from
  suricata: gcr.io/edcop-dev/mbaker-suricata:v5.0.3
  logstash: docker.elastic.co/logstash/logstash:6.4.2
  redis: redis:4.0.9
  runner: gcr.io/edcop-public/runner:8
networks:
  # Overlay is the name of the default cni network
  overlay: 'calico'
  # Net 1 is the name of the first interface
  # If using inline, change to 'inline-1', if using host networking, the interface will be retreived from configuresensors
  net1: 'passive'
  # Net 2 is the name of the second interface
  # **This will be ignored when passive is selected in suricataConfig section
  net2: 'inline-2'
  #useHostNetworking If this option is set to true, the container will see all physical interfaces on the physical host it resides.  This has some security issues but can be useful in some situations.
  use_host_networking: true 
# NodeSelector can be used when it is desired to over-ride the default sensor.  For example, if it was desired to specify passive and inline sections of the network.
node_selector:
  label: sensor
deployment_options:
  # The three options for deployment are standalone, cluster and external.  Please see the documentation on deploy options for definitions and special considerations.
  deployment: 'standalone'
  # Below options are only used in external mode when sending to a Redis queue outside of the cluster
  external_options:
    external_host: 172.31.20.90
    node_port: 30029
suricata_config:
  #If inline is set to true the Suricata pod will have three network interfaces, and will be set to take layer 2 traffic in and output it to the other interface as well as connected to the overlay network.  If the option is set to false then Suricata will have two interfaces, one for the passive and the other for the network.
  inline: false
  #If alerts_only is set to true then Suricata will not record logs for http,dns,tls,smtp. This is common when using another tool that may already be recording this such as Bro.
  alerts_only: false
  #Specifies internal networks that will be monitored.  This sets the direction of rules.
  home_net: "[192.168.0.0/16,10.0.0.0/8,172.16.0.0/12]"
  # These are the IPs outside of yout network.  This generally is set to !$HOME_NET which is everything not in the homeNet variable.
  external_net: "!$HOME_NET"
  # Specifies the threads that will be used by AF-PACKET
  net0_threads: 1
  net1_threads: 1
  # If CPU Affinity is set to no then Suricata will share CPU resources with other tools by using the OS scheduler.  If you set this option to Yes, you will be responsible for configuring which threads the various components use.  See the below link for more details:
  # http://suricata.readthedocs.io/en/latest/configuration/suricata-yaml.html#threading
  # If you need to specify mulitple cores, the syntax is: '"9-11","25-27"'
  set_cpu_affinity: no
  management_cpu_set: 1
  receive_cpu_set: 1
  worker_cpu_set: 1
  worker_threads: 1
  verdict_cpu_set: 1
  #Turning on rules updates will update the rules file for all deployed Suricata pods and cause them to reload the rules on a regular schedule as defined by rulesUpdateSchedule.  While updating is taking place, Suricata can take up to twice as much memory during this process, therefore if this is used raise the memory limit to at least 8G otherwise Suricata will be killed every time it is updated.  When Suricata is first deployed, you will still get the latest updates at the time suricata is deployed deployed regardless of what this option is set to.
  enable_rules_updates: false 
  # Set how often you want download new rules and reset Suricata
  # Accepts cronjob format, default runs twice per day
  rules_update_schedule: "* */12 * * *"
  # List of all resources that will be pulled, can list multiple options
  rules_sources:
    - https://rules.emergingthreats.net/open/suricata-4.0/emerging.rules.tar.gz
  # sslbl is currently down, not sure when it will be back up (or if)
  #  - https://sslbl.abuse.ch/blacklist/sslblacklist.rules
  # List of rule modifications.  This takes the same format as suricata-updates files, but needs a dash before each line.  For more details: https://suricata-update.readthedocs.io/en/latest/update.html#rule-matching
  rule_modifications:
    enable_conf:
      - #2019401  < Example rule number to enable
      - group:botcc.rules
      # - group:botcc.portgrouped.rules
      - group:ciarmy.rules
      - group:compromised.rules
      - group:drop.rules
      - dshield.rules
     # - group:emerging-activex.rules
      - group:emerging-attack_response.rules
      - group:emerging-chat.rules
      - group:emerging-current_events.rules
      - group:emerging-dns.rules
      - group:emerging-dos.rules
      - group:emerging-exploit.rules
      - group:emerging-ftp.rules
     # - group:emerging-games.rules
     # - group:emerging-icmp_info.rules
     # - group:emerging-icmp.rules
      - group:emerging-imap.rules
     # - group:emerging-inappropriate.rules
     # - group:emerging-info.rules
      - group:emerging-malware.rules
      - group:emerging-misc.rules
      - group:emerging-mobile_malware.rules
      - group:emerging-netbios.rules
      - group:emerging-p2p.rules
      - group:emerging-policy.rules
      - group:emerging-pop3.rules
      - group:emerging-rpc.rules
     # - group:emerging-scada.rules
     # - group:emerging-scada_special.rules
      - group:emerging-scan.rules
     # - group:emerging-shellcode.rules
      - group:emerging-smtp.rules
      - group:emerging-snmp.rules
      - group:emerging-sql.rules
      - group:emerging-telnet.rules
      - group:emerging-tftp.rules
      - group:emerging-trojan.rules
      - group:emerging-user_agents.rules
      - group:emerging-voip.rules
      - group:emerging-web_client.rules
      - group:emerging-web_server.rules
     # - group:emerging-web_specific_apps.rules
      - group:emerging-worm.rules
      - group:tor.rules
     # - group:decoder-events.rules # available in suricata sources under rules dir
     # - group:stream-events.rules  # available in suricata sources under rules dir
      - group:http-events.rules    # available in suricata sources under rules dir
      - group:smtp-events.rules    # available in suricata sources under rules dir
      - group:dns-events.rules     # available in suricata sources under rules dir
      - group:tls-events.rules     # available in suricata sources under rules dir
     # - group:modbus-events.rules  # available in suricata sources under rules dir
     # - group:app-layer-events.rules  # available in suricata sources under rules dir
     # - group:dnp3-events.rules       # available in suricata sources under rules dir
     # - group:ntp-events.rules       # available in suricata sources under rules dir
    disable_conf:
      - #2019401 < Example rule number to disable
    drop_conf:
      - #2019401 < Example rule number drop
    modify_conf:
      - #modifysid * "^drop(.*)noalert(.*)" | "alert${1}noalert${2}"  < Exmaple rule to modify
  # Requests are set to accomodate limited resource VMs
  requests:
    cpu: 100m
    memory: 64Mi
  # These limit the number of CPU cores and memory the sensor can use.  If automatic rules updates are enabled, set memory to at least 8G.  A lot of factors can be required for the amount of memory that is needed (amount of traffic, number of rules, etc).  If you are seeing eccessive restarts of Suricata or OOM (Out of memory) killed errors in Kubernetes, up these values
  limits:
    cpu: 2
    memory: 8G
#Logstash values will be ignored if standalone is set to true as no logstash will be built.
logstash_config:
  # Limits the number of threads that will be used by Logstash
  threads: 2
  # Configures the batch count that Logstash will process at a time.
  batch_count: 250
  #Sets the initial and max JVM heap that will be allocated, generally these two values should be the same.
  initial_jvm_heap: 1g
  max_jvm_heap: 1g
  #Sets the number of workers for pulling Redis events
  pipeline_output_workers: 2
  # Sets the amount of events grabbed from Redis at one time.
  pipeline_batch_size: 150
  requests:
    cpu: 100m
    memory: 64Mi
  limits:
    cpu: 2
    memory: 2G
#These values will be ignored if standalone is set to true as Redis will not be built
redis_config:
  requests:
    cpu: 100m
    memory: 64Mi
  #limits the CPU and Memory of Redis.
  limits:
    cpu: 2
    memory: 1G
